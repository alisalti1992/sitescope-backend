services:
  postgres:
    image: postgres:15
    container_name: local-postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - sitescope-network

  app:
    build: .
    container_name: sitescope-backend
    restart: unless-stopped
    ports:
      - "5000:5000"
    volumes:
      # Mount source code for hot reload (excluding node_modules)
      - ./src:/app/src
      - ./prisma:/app/prisma
      - ./storage:/app/storage
      - ./package.json:/app/package.json
      - ./.env:/app/.env
      # Prevent overwriting node_modules
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - PORT=5000
      - BASE_URL=http://localhost:5000
      - PROJECT_NAME="SiteScope"
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/postgres
      - PAGE_ANALYZER_WEBHOOK_URL="https://your-ai-service.com/analyze-page"
      - CRAWL_ANALYZER_WEBHOOK_URL="https://your-ai-service.com/analyze-crawl"
      - AI_WEBHOOK_TIMEOUT=30000
      - AI_WEBHOOK_MAX_RETRIES=3
      - AI_WEBHOOK_RETRY_DELAY=5000
      - FEATURE_EMAIL_REPORTS=true
      - SMTP_HOST=smtp.example.com
      - SMTP_PORT=587
      - SMTP_USER=username
      - SMTP_PASS=password
      - SMTP_SECURE=false
      - SMTP_FROM="SiteScope Crawler <noreply@sitescope.com>"
      - SMTP_BCC="user@example.com"
      - FRONTEND_URL=http://localhost:3000
      - FEATURE_USER_MANAGEMENT=true
      - JWT_SECRET=your-super-secret-jwt-key-change-this-in-production
      - TOKEN_EXPIRY=24h
      - DEFAULT_ADMIN_EMAIL=admin@sitescope.com
      - DEFAULT_ADMIN_PASSWORD=admin123
    depends_on:
      - postgres
    networks:
      - sitescope-network
    # Add security capabilities for Puppeteer
    cap_add:
      - SYS_ADMIN
    security_opt:
      - seccomp:unconfined

volumes:
  postgres_data:

networks:
  sitescope-network:
    driver: bridge
